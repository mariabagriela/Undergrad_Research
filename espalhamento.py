# -*- coding: utf-8 -*-
"""espalhamento.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14WoGu0bpw5Rnkb5Bz2tTAfuuQOgI-YTm
"""

import numpy as np
import matplotlib.pyplot as plt

#@title Importando os dados
posicao = np.loadtxt('posicoes_detec')
a = posicao[:,0].copy()
b = posicao[:,1].copy()

r = float(input('Distância (mm): '))
alfa = float(input('Ângulo Alpha em graus: '))
alpha = np.deg2rad(alfa)
beta = np.arccos(r/(np.sqrt(r**2+a**2))) + alpha
theta = np.arccos(((np.sqrt(a**2 +r**2))/np.sqrt(a**2+r**2+b**2))*np.cos(beta))

esp = np.rad2deg(theta)
theta_ = esp.reshape(len(theta),1)
print(f'{theta_}') #as linhas seguem a ordem A1,A2,A3,B1,B2,B3,...F1,F2,F3,...,Q3

def esfericas(x,y,z):
    rho = []
    phi_esf = []
    thet = []
    rho.append(np.sqrt(x**2+y**2+z**2))
    phi_esf.append(np.arctan(y/x))
    thet.append(np.arccos(z/rho)) #theta em radianos
    pos_esf = [rho[0],phi_esf[0],thet[0]]
    # x_e = []
    # y_e = []
    # z_e = []
    # x_e.append(rho*np.cos(phi)*np.sin(theta))
    # y_e.append(rho*np.sin(phi)*np.sin(theta))
    # z_e.append(rho*np.cos(theta))
    # pos_e = [x_e[0],y_e[0],z_e[0]]
    return np.array(pos_esf)